// Copyright 2015 The Chromium Authors. All rights reserved.
// Use of this source code is governed by a BSD-style license that can be
// found in the LICENSE file.

module network;

import "apps/network/services/network_error.fidl";
import "apps/network/services/url_loader.fidl";
import "lib/netstack/fidl/net_address.fidl";

[ServiceName="network::NetworkService"]
interface NetworkService {
  CreateURLLoader(URLLoader& loader);

  // This is not implemented
  GetCookieStore(handle<channel> cookie_store);

  // This is not implemented
  CreateWebSocket(handle<channel> socket);

  // This is not implemented
  CreateTCPBoundSocket(netstack.NetAddress? local_address,
                       handle<channel> bound_socket)
      => (NetworkError result, netstack.NetAddress? bound_to);

  // This is not implemented
  CreateTCPConnectedSocket(netstack.NetAddress remote_address,
                           handle<socket> send_stream,
                           handle<socket> receive_stream,
                           handle<channel> client_socket)
      => (NetworkError result,
          netstack.NetAddress? local_address);

  // This is not implemented
  CreateUDPSocket(handle<channel> socket);

  // This is not implemented
  CreateHttpServer(netstack.NetAddress local_address,
                   handle<channel> delegate)
      => (NetworkError result,
          netstack.NetAddress? bound_to);

  // This is not implemented
  RegisterURLLoaderInterceptor(handle<channel> factory);

  // This is not implemented
  CreateHostResolver(handle<channel> host_resolver);
};
